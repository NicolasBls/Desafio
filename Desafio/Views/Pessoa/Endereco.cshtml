@model Desafio.Models.Endereco

@{
    ViewBag.Title = "_Endereco";
    var pessoaId = ViewBag.pessoaId;
}

<div class="card">
    <div class="card-header">
        <span style="font-size: 15pt">Editar Pessoa<a class="btn btn-outline-dark pull-right" href="@Url.Action("Listar")"><i class="fa fa-backward" aria-hidden="true"></i> Voltar </a></span>
    </div>
    <div class="card-body">
        <div class="row">
            <div class="col-md-6">
                <a class="btn btn-outline-warning" href="@Url.Action("Editar", new { pessoaId })">Dados</a>  <a class="btn btn-primary" href="@Url.Action("Endereco", new { pessoaId })">Endereço</a>  <a class="btn btn-outline-success" href="@Url.Action("Telefone", new { pessoaId })">Telefone</a>

                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.enderecoId)

                        <div class="form-group">
                            @Html.Label("CEP ", htmlAttributes: new { @class = "control-label col-md-12" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.cep, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.cep, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.Label("Estado ", htmlAttributes: new { @class = "control-label col-md-12" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.estado, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.estado, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.Label("Cidade ", htmlAttributes: new { @class = "control-label col-md-12" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.cidade, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.cidade, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.Label("Bairro ", htmlAttributes: new { @class = "control-label col-md-12" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.bairro, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.bairro, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.Label("Rua", htmlAttributes: new { @class = "control-label col-md-12" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.endereco1, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.endereco1, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.Label("Número ", htmlAttributes: new { @class = "control-label col-md-12" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.numero, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.numero, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.Label("Complemento", htmlAttributes: new { @class = "control-label col-md-12" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.complemento, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.complemento, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <d2iv class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Salvar" class="btn btn-success" />
                            </div>
                        </d2iv>
                    </div>

                }
            </div>

            <div class="col-md-6">
                @{Html.RenderAction("_ListarEndereco", "Pessoa", new { pessoaId = pessoaId });}

            </div>
            @Scripts.Render("~/bundles/jqueryval")

        </div>
    </div>