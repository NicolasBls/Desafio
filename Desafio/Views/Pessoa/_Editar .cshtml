@model Desafio.Models.Pessoa

@{
    ViewBag.Title = "Editar";
}


<div class="card">
    <div class="card-header">
        <span style="font-size: 15pt">Editar Pessoa</span>
    </div>
    <div class="card-body">
        <a href="@Url.Action("Editar", new {pessoaId = 1})">Dados</a> - <a href="@Url.Action("_Endereco")">Endereço</a> - <a href="@Url.Action("_Telefone")">Telefone</a>

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.pessoaId)

                <div class="form-group">
                    @Html.Label("Nome ", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.nome, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.nome, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("Data de Nascimento", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.dataNascimento, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.dataNascimento, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("CPF ", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.cpf, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.cpf, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("Email ", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Salvar" class="btn btn-success" />
                    </div>
                </div>
            </div>
        }

        @section Scripts {
            @Scripts.Render("~/bundles/jqueryval")
        }
    </div>
</div>